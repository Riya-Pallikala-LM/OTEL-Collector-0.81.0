---
- name: Get latest signalfx-dotnet-tracing release json
  ansible.windows.win_uri:
    url: "https://api.github.com/repos/signalfx/signalfx-dotnet-tracing/releases/latest"
    return_content: yes
    headers:
      Authorization: "{{ signalfx_dotnet_auto_instrumentation_github_token }}"
    proxy_password: "{{ win_proxy_password | default(omit) }}"
    proxy_url: "{{ win_proxy_url | default(omit) }}"
    proxy_username: "{{ win_proxy_username | default(omit) }}"
    use_proxy: "{{ win_use_proxy }}"
  register: latest_dotnet_release
  when: signalfx_dotnet_auto_instrumentation_version == "latest" and not signalfx_dotnet_auto_instrumentation_msi_url

- name: Set dotnet_download_url fact
  set_fact:
    dotnet_download_url: |-
      {%- if signalfx_dotnet_auto_instrumentation_msi_url -%}
        {{ signalfx_dotnet_auto_instrumentation_msi_url }}
      {%- else -%}
        {%- if signalfx_dotnet_auto_instrumentation_version != "latest" -%}
          {%- set version = signalfx_dotnet_auto_instrumentation_version.lstrip("v") -%}
          {{ base_url }}/v{{ version }}/signalfx-dotnet-tracing-{{ version }}-x64.msi
        {%- elif signalfx_dotnet_auto_instrumentation_version == "latest" and latest_dotnet_release is defined -%}
          {%- set version = latest_dotnet_release.json.tag_name.lstrip("v") -%}
          {{ base_url }}/v{{ version }}/signalfx-dotnet-tracing-{{ version }}-x64.msi
        {%- endif -%}
      {%- endif -%}
  vars:
    base_url: https://github.com/signalfx/signalfx-dotnet-tracing/releases/download

- name: Download signalfx-dotnet-tracing MSI
  ansible.windows.win_get_url:
    url: "{{ dotnet_download_url }}"
    dest: "%TEMP%"
    proxy_password: "{{ win_proxy_password | default(omit) }}"
    proxy_url: "{{ win_proxy_url | default(omit) }}"
    proxy_username: "{{ win_proxy_username | default(omit) }}"
    use_proxy: "{{ win_use_proxy }}"
  register: dotnet_msi

- name: Install signalfx-dotnet-tracing MSI
  ansible.windows.win_package:
    path: "{{ dotnet_msi.dest }}"
    state: present
  notify: "reset iis"

- name: Create registry path
  ansible.windows.win_regedit:
    path: "{{ registry_key }}"
    state: present
  notify: "reset iis"

- name: Set registry value
  ansible.windows.win_regedit:
    path: "{{ registry_key }}"
    state: present
    name: SIGNALFX_ENV
    data: "{{ signalfx_dotnet_auto_instrumentation_environment }}"
    type: string
  when: signalfx_dotnet_auto_instrumentation_environment != ""
  notify: "reset iis"

- name: Set registry value
  ansible.windows.win_regedit:
    path: "{{ registry_key }}"
    state: present
    name: SIGNALFX_SERVICE_NAME
    data: "{{ signalfx_dotnet_auto_instrumentation_service_name }}"
    type: string
  when: signalfx_dotnet_auto_instrumentation_service_name != ""
  notify: "reset iis"

- name: Set registry value
  ansible.windows.win_regedit:
    path: "{{ registry_key }}"
    state: present
    name: SIGNALFX_PROFILER_ENABLED
    data: "{{ signalfx_dotnet_auto_instrumentation_enable_profiler | string | lower }}"
    type: string
  notify: "reset iis"

- name: Set registry value
  ansible.windows.win_regedit:
    path: "{{ registry_key }}"
    state: present
    name: SIGNALFX_PROFILER_MEMORY_ENABLED
    data: "{{ signalfx_dotnet_auto_instrumentation_enable_profiler_memory | string | lower }}"
    type: string
  notify: "reset iis"

- name: Set additional registry values
  ansible.windows.win_regedit:
    path: "{{ registry_key }}"
    state: present
    name: "{{ item.key }}"
    data: "{{ item.value }}"
    type: string
  loop: "{{ signalfx_dotnet_auto_instrumentation_additional_options | default({}) | dict2items }}"
  notify: "reset iis"
